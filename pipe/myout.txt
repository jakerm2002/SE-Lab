Y86-64 Processor: PIPE
45 bytes of code read

Cycle = 0. CC = Z=1 S=0 O=0, Stat = AOK
F: predPC = 0x0
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB, Stage PC = 0x0
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB, Stage PC = 0x0
M: instr = nop, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB, Stage PC = 0x0
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB, Stage PC = 0x0
	Execute: ALU: + 0x0 0x0 --> 0x0
	Fetch: f_pc = 0x0, f_instr = irmovq

Cycle = 1. CC = Z=1 S=0 O=0, Stat = BUB
F: predPC = 0xa
D: instr = irmovq, rA = ----, rB = %rsp, valC = 0x2d, valP = 0xa, Stat = AOK, Stage PC = 0x0
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB, Stage PC = 0x0
M: instr = nop, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB, Stage PC = 0x0
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB, Stage PC = 0x0
	Execute: ALU: + 0x0 0x0 --> 0x0
	Fetch: f_pc = 0xa, f_instr = rrmovq

Cycle = 2. CC = Z=1 S=0 O=0, Stat = BUB
F: predPC = 0xc
D: instr = rrmovq, rA = %rsp, rB = %r8, valC = 0x0, valP = 0xc, Stat = AOK, Stage PC = 0x0
E: instr = irmovq, valC = 0x2d, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %rsp, dstM = ----, Stat = AOK, Stage PC = 0x0
M: instr = nop, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB, Stage PC = 0x0
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB, Stage PC = 0x0
	Execute: ALU: + 0x2d 0x0 --> 0x2d
	Fetch: f_pc = 0xc, f_instr = irmovq

Cycle = 3. CC = Z=1 S=0 O=0, Stat = BUB
F: predPC = 0x16
D: instr = irmovq, rA = ----, rB = %rax, valC = 0xc, valP = 0x16, Stat = AOK, Stage PC = 0x0
E: instr = rrmovq, valC = 0x0, valA = 0x2d, valB = 0x0
   srcA = %rsp, srcB = ----, dstE = %r8, dstM = ----, Stat = AOK, Stage PC = 0x0
M: instr = irmovq, Cnd = 0, valE = 0x2d, valA = 0x0
   dstE = %rsp, dstM = ----, Stat = AOK, Stage PC = 0x0
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB, Stage PC = 0x0
	Execute: ALU: + 0x2d 0x0 --> 0x2d
	Fetch: f_pc = 0x16, f_instr = pushq

Cycle = 4. CC = Z=1 S=0 O=0, Stat = BUB
F: predPC = 0x18
D: instr = pushq, rA = %rax, rB = ----, valC = 0x0, valP = 0x18, Stat = AOK, Stage PC = 0x0
E: instr = irmovq, valC = 0xc, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %rax, dstM = ----, Stat = AOK, Stage PC = 0x0
M: instr = rrmovq, Cnd = 1, valE = 0x2d, valA = 0x2d
   dstE = %r8, dstM = ----, Stat = AOK, Stage PC = 0x0
W: instr = irmovq, valE = 0x2d, valM = 0x0, dstE = %rsp, dstM = ----, Stat = AOK, Stage PC = 0x0
	Writeback: Wrote 0x2d to register %rsp
	Execute: ALU: + 0xc 0x0 --> 0xc
	Fetch: f_pc = 0x18, f_instr = rrmovq

Cycle = 5. CC = Z=1 S=0 O=0, Stat = AOK
F: predPC = 0x1a
D: instr = rrmovq, rA = %rsp, rB = %r9, valC = 0x0, valP = 0x1a, Stat = AOK, Stage PC = 0x0
E: instr = pushq, valC = 0x0, valA = 0xc, valB = 0x2d
   srcA = %rax, srcB = %rsp, dstE = %rsp, dstM = ----, Stat = AOK, Stage PC = 0x0
M: instr = irmovq, Cnd = 0, valE = 0xc, valA = 0x0
   dstE = %rax, dstM = ----, Stat = AOK, Stage PC = 0x0
W: instr = rrmovq, valE = 0x2d, valM = 0x0, dstE = %r8, dstM = ----, Stat = AOK, Stage PC = 0x0
	Writeback: Wrote 0x2d to register %r8
	Execute: ALU: + 0xfffffffffffffff8 0x2d --> 0x25
	Fetch: f_pc = 0x1a, f_instr = popq

Cycle = 6. CC = Z=1 S=0 O=0, Stat = AOK
F: predPC = 0x1c
D: instr = popq, rA = %r10, rB = ----, valC = 0x0, valP = 0x1c, Stat = AOK, Stage PC = 0x0
E: instr = rrmovq, valC = 0x0, valA = 0x25, valB = 0x0
   srcA = %rsp, srcB = ----, dstE = %r9, dstM = ----, Stat = AOK, Stage PC = 0x0
M: instr = pushq, Cnd = 0, valE = 0x25, valA = 0xc
   dstE = %rsp, dstM = ----, Stat = AOK, Stage PC = 0x0
W: instr = irmovq, valE = 0xc, valM = 0x0, dstE = %rax, dstM = ----, Stat = AOK, Stage PC = 0x0
	Writeback: Wrote 0xc to register %rax
	Memory: Wrote 0xc to address 0x25
	Execute: ALU: + 0x25 0x0 --> 0x25
	Fetch: f_pc = 0x1c, f_instr = halt

Cycle = 7. CC = Z=1 S=0 O=0, Stat = AOK
F: predPC = 0x1d
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x1d, Stat = HLT, Stage PC = 0x0
E: instr = popq, valC = 0x0, valA = 0x25, valB = 0x25
   srcA = %rsp, srcB = %rsp, dstE = %rsp, dstM = %r10, Stat = AOK, Stage PC = 0x0
M: instr = rrmovq, Cnd = 1, valE = 0x25, valA = 0x25
   dstE = %r9, dstM = ----, Stat = AOK, Stage PC = 0x0
W: instr = pushq, valE = 0x25, valM = 0x0, dstE = %rsp, dstM = ----, Stat = AOK, Stage PC = 0x0
	Writeback: Wrote 0x25 to register %rsp
	Execute: ALU: + 0x8 0x25 --> 0x2d
	Fetch: f_pc = 0x1d, f_instr = halt

Cycle = 8. CC = Z=1 S=0 O=0, Stat = AOK
F: predPC = 0x1e
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x1e, Stat = HLT, Stage PC = 0x0
E: instr = halt, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = HLT, Stage PC = 0x0
M: instr = popq, Cnd = 0, valE = 0x2d, valA = 0x25
   dstE = %rsp, dstM = %r10, Stat = AOK, Stage PC = 0x0
W: instr = rrmovq, valE = 0x25, valM = 0x0, dstE = %r9, dstM = ----, Stat = AOK, Stage PC = 0x0
	Writeback: Wrote 0x25 to register %r9
	Memory: Read 0xc from 0x25
	Execute: ALU: + 0x0 0x0 --> 0x0
	Fetch: f_pc = 0x1e, f_instr = halt

Cycle = 9. CC = Z=1 S=0 O=0, Stat = AOK
F: predPC = 0x1f
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x1f, Stat = HLT, Stage PC = 0x0
E: instr = halt, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = HLT, Stage PC = 0x0
M: instr = halt, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = HLT, Stage PC = 0x0
W: instr = popq, valE = 0x2d, valM = 0xc, dstE = %rsp, dstM = %r10, Stat = AOK, Stage PC = 0x0
	Writeback: Wrote 0x2d to register %rsp
	Writeback: Wrote 0xc to register %r10
	Execute: ALU: + 0x0 0x0 --> 0x0
	Fetch: f_pc = 0x1f, f_instr = halt

Cycle = 10. CC = Z=1 S=0 O=0, Stat = AOK
F: predPC = 0x20
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x20, Stat = HLT, Stage PC = 0x0
E: instr = halt, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = HLT, Stage PC = 0x0
M: instr = nop, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB, Stage PC = 0x0
W: instr = halt, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = HLT, Stage PC = 0x0
	Execute: ALU: + 0x0 0x0 --> 0x0
	Fetch: f_pc = 0x20, f_instr = halt
7 instructions executed
Status = HLT
Condition Codes: Z=1 S=0 O=0
Changed Register State:
%rax:	0x0000000000000000	0x000000000000000c
%rsp:	0x0000000000000000	0x000000000000002d
%r8:	0x0000000000000000	0x000000000000002d
%r9:	0x0000000000000000	0x0000000000000025
%r10:	0x0000000000000000	0x000000000000000c
Changed Memory State:
0x0020:	0x0000000000000000	0x00000c0000000000
ISA Check Succeeds
CPI: 7 cycles/7 instructions = 1.00
